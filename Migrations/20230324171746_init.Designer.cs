// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TesteBitzen.Data;

#nullable disable

namespace TesteBitzen.Migrations
{
    [DbContext(typeof(VehicleRentDbContext))]
    [Migration("20230324171746_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TesteBitzen.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UserPhone")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TesteBitzen.Models.VehicleCategoryModel", b =>
                {
                    b.Property<int>("VehicleCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VehicleCategoryId"));

                    b.Property<string>("VehicleCategory")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("VehicleFuelType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("integer");

                    b.Property<double?>("VehicleRentCost")
                        .IsRequired()
                        .HasColumnType("double precision");

                    b.HasKey("VehicleCategoryId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("VehicleCategories");
                });

            modelBuilder.Entity("TesteBitzen.Models.VehicleModel", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleAssembler")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("VehicleCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("VehicleId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("TesteBitzen.Models.VehicleCategoryModel", b =>
                {
                    b.HasOne("TesteBitzen.Models.VehicleModel", "Vehicle")
                        .WithOne("VehicleCategory")
                        .HasForeignKey("TesteBitzen.Models.VehicleCategoryModel", "VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TesteBitzen.Models.VehicleModel", b =>
                {
                    b.HasOne("TesteBitzen.Models.UserModel", "User")
                        .WithOne("Vehicle")
                        .HasForeignKey("TesteBitzen.Models.VehicleModel", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TesteBitzen.Models.UserModel", b =>
                {
                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("TesteBitzen.Models.VehicleModel", b =>
                {
                    b.Navigation("VehicleCategory")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
